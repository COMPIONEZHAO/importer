<?xml version="1.0" encoding="UTF-8"?>
<!-- 
   Copyright 2017 Norconex Inc.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

<!-- This is a config file with as many configuration options being set
     as possible, to test validation as much we can.
     -->
<importer>
  <tempDir>/some/path/</tempDir>
  <maxFileCacheSize>99</maxFileCacheSize>
  <maxFilePoolCacheSize>99</maxFilePoolCacheSize>
  <parseErrorsSaveDir>/some/path</parseErrorsSaveDir>

  <preParseHandlers>
    <filter class="com.norconex.importer.handler.filter.impl.DateMetadataFilter"
        onMatch="include" field="FIELD" format="FORMAT" >
      <restrictTo caseSensitive="true" field="bfield">.*blah</restrictTo>
      <condition operator="ge" date="TODAY-7" />
      <condition operator="lt" date="TODAY" />
    </filter>
    <filter class="com.norconex.importer.handler.filter.impl.DOMContentFilter"
            onMatch="exclude"  caseSensitive="true" sourceCharset="UTF-8" 
            selector="selector" extract="text" >
      <restrictTo caseSensitive="false" field="FIELD">.*</restrictTo>
      <regex>.*</regex>
    </filter>
    <filter class="com.norconex.importer.handler.filter.impl.EmptyMetadataFilter"
            onMatch="include" fields="FIELD1, FIELD2" >
      <restrictTo caseSensitive="false" field="FIELD">.*</restrictTo>
    </filter>
    <filter class="com.norconex.importer.handler.filter.impl.NumericMetadataFilter"
            onMatch="include" field="age" >
      <restrictTo caseSensitive="false" field="FIELD">.*</restrictTo>
      <condition operator="ge" number="20" />
      <condition operator="lt" number="30" />
    </filter>
    <filter class="com.norconex.importer.handler.filter.impl.RegexContentFilter"
            onMatch="include"  caseSensitive="true"
            sourceCharset="UTF-8" maxReadSize="9999" >
      <restrictTo caseSensitive="false" field="FIELD">.*</restrictTo>
      <regex>.*regex.*</regex>
    </filter>
    <filter class="com.norconex.importer.handler.filter.impl.RegexMetadataFilter"
          onMatch="include" field="title" >
      <restrictTo caseSensitive="false" field="FIELD">.*</restrictTo>
      <regex>.*potato.*</regex>
    </filter>
    <filter class="com.norconex.importer.handler.filter.impl.ScriptFilter"
            engineName="MyEngine" onMatch="include" 
            sourceCharset="UTF-8" maxReadSize="999" >
      <restrictTo caseSensitive="false" field="FIELD">.*</restrictTo>
      <script>[CDATA[
        var myvar = "test";
      ]]</script>
    </filter>    
    <splitter class="com.norconex.importer.handler.splitter.impl.CsvSplitter"
          separatorCharacter="A" quoteCharacter="B" escapeCharacter="C"
          useFirstRowAsFields="false" linesToSkip="0" referenceColumn="columnA"
          contentColumns="columnB, columnC, columnD" >
      <restrictTo caseSensitive="false" field="FIELD">.*</restrictTo>
    </splitter>
    <splitter class="com.norconex.importer.handler.splitter.impl.DOMSplitter"
          selector="div.contact" sourceCharset="UTF-8" >
      <restrictTo caseSensitive="false" field="FIELD">.*</restrictTo>
    </splitter>    
    <splitter class="com.norconex.importer.handler.splitter.impl.TranslatorSplitter"
          api="microsoft" >
      <restrictTo caseSensitive="false" field="FIELD">.*</restrictTo>
      <ignoreContent>true</ignoreContent>
      <ignoreNonTranslatedFields>false</ignoreNonTranslatedFields>
      <fieldsToTranslate>field1, field2</fieldsToTranslate>
      <sourceLanguageField>lang</sourceLanguageField>
      <sourceLanguage>en</sourceLanguage>
      <targetLanguages>fr,it</targetLanguages>
      <clientId>blahid</clientId>
      <clientSecret>blahsecret</clientSecret>
    </splitter>
    
    <!-- 
    <transformer class="..." />
    <splitter class="..." />
     -->
     
    <tagger class="com.norconex.importer.handler.tagger.impl.DOMTagger"
            fromField="FROMFIELD" sourceCharset="UTF-8">
      <dom selector="a selector" toField="TODOFIELD1"
           overwrite="false"     extract="ownText" 
           matchBlanks="false"   defaultValue="NOVALUE1" />
      <dom selector="another selector" toField="TODOFIELD2"
           extract="tagName"     defaultValue="NOVALUE2" />
      <restrictTo caseSensitive="true" field="bfield">.*blah</restrictTo>
      <restrictTo caseSensitive="false" field="afield">.*</restrictTo>
    </tagger>
     
  </preParseHandlers>

  <documentParserFactory>
    <ocr path="/path/example/">
        <languages>en, fr</languages>
        <contentTypes>image/jpeg, image/png</contentTypes>
    </ocr>
    <ignoredContentTypes>application/xml</ignoredContentTypes>
    <embedded>
      <splitContentTypes>application/zip</splitContentTypes>
      <noExtractEmbeddedContentTypes>image/.*</noExtractEmbeddedContentTypes>
      <noExtractContainerContentTypes>application/pdf</noExtractContainerContentTypes>
    </embedded>
    <fallbackParser class="com.norconex.importer.parser.impl.FallbackParser" />
    <parsers>
      <parser contentType="text/html" class="com.norconex.importer.parser.impl.External" />
    </parsers>
  </documentParserFactory>


  <!-- No point re-testing them all here, do just a few. -->
  <!-- 
  <postParseHandlers>
    <tagger class="..." />
    <transformer class="..." />
    <filter class="..." />
    <splitter class="..." />
  </postParseHandlers>
  -->

  <responseProcessors>
    <responseProcessor 
        class="com.norconex.importer.response.DummyResponseProcessor" />
  </responseProcessors>

</importer>